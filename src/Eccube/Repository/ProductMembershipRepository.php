<?php

namespace Eccube\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductMembershipRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductMembershipRepository extends EntityRepository
{
    /**
     * @var \Eccube\Application
     */
    protected $app;

    public function setApplication(Application $app)
    {
        $this->app = $app;
    }

    /**
     * 年会費一覧を取得する.
     *
     * @return \Eccube\Entity\ProductMembership[] 年会費の配列
     */
    public function getList(Category $Parent = null, $flat = false)
    {
        $options = $this->app['config']['doctrine_cache'];
        $lifetime = $options['result_cache']['lifetime'];

        $qb = $this->createQueryBuilder('pm')
            ->select('pm')
            ->orderBy('pm.membership_year', 'DESC');
        $ProductMembership = $qb->getQuery()
            ->useResultCache(true, $lifetime)
            ->getResult();

        return $ProductMembership;
    }


    /**
     * 年会費登録有無を取得する.
     *
     * @return 年会費登録有無
     */
    public function isExistsMembership($membershipYear, $exclusionProductId = false)
    {
        $qb = $this->createQueryBuilder('pm')
            ->leftJoin('pm.Product', 'p')
            ->select('pm')
            ->where('pm.membership_year = :membership_year')
            ->setParameters(array(
                'membership_year' => $membershipYear
            ))
            ->orderBy('pm.membership_year', 'DESC');
        if (!is_null($exclusionProductId)) {
            $qb
                ->andWhere('p.id <> :product_id')
                ->setParameter('product_id', $exclusionProductId);
        }
        $ProductMembership = $qb->getQuery()
            ->getResult();
        return (0 < count($ProductMembership));
    }

    public function getMembershipProductName($membershipYear)
    {
        $productMembership = $this->createQueryBuilder('pm')
            ->where('pm.membership_year = :membership_year')
            ->setParameter('membership_year', $membershipYear)
            ->getQuery()
            ->getOneOrNullResult();
        
        if (isset($productMembership)) {
            return $productMembership->getProduct()->getName();
        }
            
        return '';
    }

    /**
     * get query builder.
     *
     * @param  array $searchData
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getProductMembershipQueryBuilderByMembershipId($MembershipId)
    {
        $qb = $this->createQueryBuilder('pm');
        if (is_array($MembershipId)) {
            $qb->andWhere($qb->expr()->in('pm.id', ':MembershipId'))
                ->setParameter('MembershipId', $MembershipId);
        } else {
            $qb->andWhere('pm.id = :MembershipId')
                ->setParameter('MembershipId', $MembershipId);
        }

        // Order By
        // XXX Paginater を使用した場合に PostgreSQL で正しくソートできない
        $qb->addOrderBy('pm.id', 'DESC');

        return $qb;
    }
}
